# docker-compose.staging.yml
version: '3.8'

services:
  app:
    build:
      context: .
      args:
        NODE_ENV: staging
    ports:
      - "3001:3000"
    env_file:
      - .env.staging
    environment:
      - NODE_ENV=staging
      - PORT=3000    # Explicitly set container port
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-0.5}'
          memory: '${MEMORY_LIMIT:-512M}'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network-staging

  db:
    image: mongo:latest
    env_file:
      - .env.staging
    ports:
      - "${MONGO_PORT:-27018}:27017"
    volumes:
      - mongodb_data_staging:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME:-anonymous-sharing-staging}
    healthcheck:
      test: ["CMD", "mongosh", "-u", "${MONGO_USER}", "-p", "${MONGO_PASSWORD}", "--eval", "'db.runCommand(\"ping\").ok'"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network-staging

volumes:
  mongodb_data_staging:
    name: ${COMPOSE_PROJECT_NAME:-anonymous-sharing-staging}_mongodb_data

networks:
  app-network-staging:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-anonymous-sharing-staging}-network
