# docker-compose.yml
version: '3.8'

services:
  app:
    build:
      context: .
      args:
        NODE_ENV: development
    ports:
      - "${PORT:-3000}:3000"
    env_file:
      - .env
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-0.5}'
          memory: '${MEMORY_LIMIT:-512M}'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  db:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME:-anonymous-sharing}
    healthcheck:
      test: ["CMD", "mongosh", "-u", "${MONGO_USER}", "-p", "${MONGO_PASSWORD}", "--eval", "'db.runCommand(\"ping\").ok'"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

volumes:
  mongodb_data:
    name: ${COMPOSE_PROJECT_NAME:-anonymous-sharing}_mongodb_data

networks:
  app-network:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME:-anonymous-sharing}_network
